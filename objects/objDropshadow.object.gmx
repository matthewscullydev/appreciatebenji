<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1001000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>srf = noone;

x_distance = 4;
y_distance = 4;

dropshadow_alpha = 0.5;

//add whatever objects you want to have a dropshadow
object[0] = objSave;
object[1] = objPlayerKiller;
object[2] = objPlatform;
object[3] = objBlockInvis;
object[4] = objBlockFake;
object[5] = objWarp;

max_objects = array_length_1d(object);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(srf)) surface_free(srf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(srf)) surface_free(srf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(srf)) surface_free(srf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!surface_exists(srf)){
    srf = surface_create(room_width,room_height);
    surface_set_target(srf);
    //special cases
    with(objPlayer) draw_sprite_ext(sprite_index,image_index,x + other.x_distance
    ,y + other.y_distance,image_xscale * xScale,image_yscale,image_angle,c_black,image_alpha);
    with(objBlock) {
        if(object_index = objBlock) //only the actual objBlock, not any of its children
        draw_sprite_ext(sprBlock,image_index,x + other.x_distance 
        ,y + other.y_distance,image_xscale,image_yscale,image_angle,c_black,image_alpha);
    }
    for(i = 0; i &lt; max_objects; i++)
    with(object[i]) if(sprite_index &gt;= 0 and visible = true and object_index != objPlayer and object_index != objBlock) draw_sprite_ext(sprite_index,image_index,x + other.x_distance
    ,y + other.y_distance,image_xscale,image_yscale,image_angle,c_black,image_alpha);
    surface_reset_target();
}

surface_set_target(srf);
draw_clear_alpha(c_white,0);
//special cases
with(objPlayer) draw_sprite_ext(sprite_index,image_index,x + other.x_distance
,y + other.y_distance,image_xscale * xScale,image_yscale,image_angle,c_black,image_alpha);
with(objBlock) {
    if(object_index = objBlock) //only the actual objBlock, not any of its children
    draw_sprite_ext(sprBlock,image_index,x + other.x_distance 
    ,y + other.y_distance,image_xscale,image_yscale,image_angle,c_black,image_alpha);
}
for(i = 0; i &lt; max_objects; i++)
with(object[i]) if(sprite_index &gt;= 0 and visible = true and object_index != objPlayer and object_index != objBlock) draw_sprite_ext(sprite_index,image_index,x + other.x_distance
,y + other.y_distance,image_xscale,image_yscale,image_angle,c_black,image_alpha);
surface_reset_target();

draw_surface_ext(srf,0,0,1,1,0,c_black,dropshadow_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
